package com.intel.realsense.librealsense;

public enum HWCommand {
    MRD((byte)0x01),
    MWD((byte)0x02),
    IRB((byte)0x03),
    IRW((byte)0x04),
    IRD((byte)0x05),
    IWB((byte)0x06),
    IWW((byte)0x07),
    IWD((byte)0x08),
    FRB((byte)0x09),
    FWB((byte)0x0A),
    FES((byte)0x0B),
    FEF((byte)0x0C),
    FSRU((byte)0x0D),
    FPLOCK((byte)0x0E),
    GLD((byte)0x0F),
    GVD((byte)0x10),
    UPD((byte)0x11),
    UPDI((byte)0x12),
    GETCAL((byte)0x13),
    SETCAL((byte)0x14),
    GETINTCAL((byte)0x15),
    SETINTCAL((byte)0x16),
    ERB((byte)0x17),
    EWB((byte)0x18),
    GPWM((byte)0x19),
    SPWM((byte)0x1A),
    INITCAL((byte)0x1C),
    LOADINTCAL((byte)0x1D),
    DFU((byte)0x1E),
    GETCALIBINPUTPARAMS((byte)0x1f),
    RST((byte)0x20),
    GETFWRECCOEFF((byte)0x21),
    RFBI((byte)0x22),
    GLP((byte)0x23),
    GLEC((byte)0x24),
    WTI((byte)0x25),
    AMCGETVER((byte)0x26),
    OVERFLOWSTOPEN((byte)0x27),
    OBR((byte)0x28),
    OBW((byte)0x29),
    GTEMP((byte)0x2A),
    AMCSET((byte)0x2B),
    AMCGET((byte)0x2C),
    UAME((byte)0x2D),
    TS_HEADER((byte)0x2E),
    TS_UNITS((byte)0x2F),
    UAMG((byte)0x30),
    SETDEMOSAIC((byte)0x31),
    GETAEDRK((byte)0x34),
    SETAEDRK((byte)0x35),
    GETAEBRT((byte)0x36),
    SETAEBRT((byte)0x37),
    SETCOLCORR((byte)0x38),
    MMRB((byte)0x39),
    MMWB((byte)0x3A),
    PFD((byte)0x3B),
    PTENABLEMODE((byte)0x3C),
    PTEYESAFETYVAL((byte)0x3D),
    PTWINDOWCNT((byte)0x3E),
    PTPWMSTART((byte)0x3F),
    PTENABLEDISABLECNT((byte)0x40),
    STAT_EN((byte)0x41),
    STAT_HIST((byte)0x42),
    STAT_FRM((byte)0x43),
    SETAEROI((byte)0x44),
    GETAEROI((byte)0x45),
    MM_TEMP((byte)0x46),
    UPDATE_MM_FW((byte)0x47),
    TS_GET_UNITS((byte)0x48),
    GETDEPTHCOEFF((byte)0x49),
    STACK_STATUS_GET((byte)0x4A),
    DEPTH_EU_ERROR_SET((byte)0x4D),
    SYNC((byte)0x4E),
    MMER((byte)0x4F),
    MMEW((byte)0x50),
    CALIBRECALC((byte)0x51),
    LOCK_EEPROM((byte)0x52),
    GETMMEXTRNSIC((byte)0x53),
    SETMMEXTRNSIC((byte)0x54),
    OEMDG((byte)0x55),
    WOS((byte)0x56),
    ROS((byte)0x57),
    LOS((byte)0x58),
    FVT((byte)0x59),
    CANCEL_AUTO_UPDATE((byte)0x5A),
    MIPI_TEST_EN((byte)0x5B),
    MIPI_CNT_RST((byte)0x5C),
    MIPI_CNT_GET((byte)0x5D),
    RGB_FLIP_ENABLE((byte)0x5E),
    EGPIO_READ((byte)0x5F),
    FLAGB_READ((byte)0x60),
    CALIBRESTOREDEFAULT((byte)0x61),
    SETINTCALNEW((byte)0x62),
    SETMMEXTRNSICNEW((byte)0x63),
    AEFACE_CFG((byte)0x64),
    AEFACE_START((byte)0x65),
    CALIBRESTOREEPROM((byte)0x66),
    SETUSB2BWLIMIT((byte)0x67),
    HWM_D4M_MODE((byte)0x68),
    SET_CAM_SYNC((byte)0x69),
    GET_CAM_SYNC((byte)0x6A),
    D4M_OPER_MODE_EN((byte)0x6B),
    D4M_OPER_MODE_GET((byte)0x6C),
    SETAEDB((byte)0x6D),
    GETAEDB((byte)0x6E),
    PRESET_CFG((byte)0x6F),
    PRESET_APPLY((byte)0x70),
    PRESET_QUERY((byte)0x71),
    PRESET_GET((byte)0x72),
    LASER_EN((byte)0x73),
    LASER_GET((byte)0x74),
    SETRGBAEROI((byte)0x75),
    GETRGBAEROI((byte)0x76),
    SETCALIBFRAMES((byte)0x77),
    GETCALIBFRAMES((byte)0x78),
    CALIBUPDATEISP((byte)0x79),
    GETASICTEMP((byte)0x7A),
    SETSUBPRESET((byte)0x7B),
    GETSUBPRESETNAME((byte)0x7D),
    RECPARAMSGET((byte)0x7E),
    LASERONCONST((byte)0x7F);


    private final byte mValue;

    private HWCommand(byte value) { mValue = value; }
    public byte value() { return mValue; }
}
